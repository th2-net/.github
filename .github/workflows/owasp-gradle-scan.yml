name: OWASP scan GitHub

on:
  workflow_call:
    inputs:
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      multiproject:
        required: false
        type: boolean
        default: false
        description: 'false for dependencyCheckAnalyze, true for dependencyCheckAggregate'
      javaVersion:
        required: false
        type: string
        default: '11'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
    secrets:
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'

jobs:
  owasp-scan-job:
    runs-on: ${{ inputs.runsOn }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Set up JDK ${{ inputs.javaVendor }} ${{ inputs.javaVersion }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.javaVendor }}
          java-version: ${{ inputs.javaVersion }}
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
          gradle-home-cache-includes: |
            caches
            notifications
            dependency-check-data
      - name: Run OWASP single-project scanning
        # continue-on-error: true
        if: ${{ !inputs.multiproject }}
        run: ./gradlew dependencyCheckAnalyze -PnvdApiKey=${{ secrets.nvd-api-key }} --info
      - name: Run OWASP multi-project scanning
        # continue-on-error: true
        if: ${{ inputs.multiproject }}
        run: ./gradlew dependencyCheckAggregate -PnvdApiKey=${{ secrets.nvd-api-key }} --info
      - name: Upload OWASP scan results to GitHub Security tab
        # dependabot does not have write access to publish scanning results (in any case we don't want that from temporal branches)
        if: (success() || failure()) && github.actor != 'dependabot[bot]'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: './build/reports/dependency-check-report.sarif'