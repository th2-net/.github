name: Build and publish Python tar boll with gRPC

on:
  workflow_call:
    inputs:
      custom-version:
        required: false
        type: string
        default: ''
        description: 'version to override one in package_info.json file'
      project-path:
        required: false
        type: string
        default: '.'
        description: 'path to the Gradle project with python publication'
      java-version:
        required: false
        type: string
        default: '11'
      java-vendor:
        required: false
        type: string
        default: 'zulu'
      python-version:
        required: false
        type: string
        default: '3.8'
    secrets:
      pypi_password:
        required: true

jobs:
  build-and-publish:
    name: Build and publish Python distributions to PyPI
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Set version for current build in package_info.json
        if: ${{ inputs.custom-version != '' }}
        uses: MerthinTechnologies/edit-json-action@v1
        with:
          filename: "${{ inputs.project-path }}/package_info.json"
          key: 'package_version'
          value: ${{ inputs.custom-version }}
      - name: Set up Python ${{ inputs.python-version }}
        uses: actions/setup-python@v5
        with:
          python-version: ${{ inputs.python-version }}
      - name: Set up JDK ${{ inputs.java-vendor }} ${{ inputs.java-version }}
        uses: actions/setup-java@v4
        with:
          distribution: ${{ inputs.java-vendor }}
          java-version: ${{ inputs.java-version }}
      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
          gradle-version: wrapper
      - name: Build with Gradle
        run: ./gradlew -p ${{ inputs.project-path }} --info clean build
      - name: Build package
        working-directory: ${{ inputs.project-path }}
        run: |
          pip install -r requirements.txt
          python setup.py generate -s
          python setup.py sdist
      - name: Publish distribution to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          user: __token__
          password: ${{ secrets.pypi_password }}
          repository-url: https://upload.pypi.org/legacy/
          packages-dir: ${{ inputs.project-path }}/dist/