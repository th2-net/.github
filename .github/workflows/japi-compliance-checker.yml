name: Check API compatibility between two jars

on:
  workflow_call:
    inputs:
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      javaVersion:
        required: false
        type: string
        default: '21'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
      targetJarUrl:
        required: true
        type: string
        default: ""
        description: 'url to the target api version jar file.'
      projectPath:
        required: false
        type: string
        default: '.'
        description: "path to the Gradle module. Root directory by default"
      gradlePropertiesPath:
        required: false
        type: string
        default: '.'
        description: "path to the Gradle module. Root directory by default"
      libsFolderPath:
        required: false
        type: string
        default: '.'
        description: "custom path to the library. Same as projectPath/build/libs by default"
      continueOnError:
        required: false
        type: boolean
        default: false
        description: "flag to ignore errors in compliance check step. default is false"



jobs:
  japi-compliance-check:
    runs-on: ${{ inputs.runsOn }}
    steps:
      - uses: actions/checkout@v5

      - name: Get release_version
        id: ver
        uses: BrycensRanch/read-properties-action@v1.0.4
        with:
          file: ${{ inputs.gradlePropertiesPath }}/gradle.properties
          property: release_version

      - name: Set up JDK ${{ inputs.javaVendor }} ${{ inputs.javaVersion }}
        uses: actions/setup-java@v5
        with:
          distribution: ${{ inputs.javaVendor }}
          java-version: ${{ inputs.javaVersion }}

      - name: install japi-compliance-checker
        run: sudo apt-get update && sudo apt-get install -y japi-compliance-checker

      - name: Validate Gradle Wrapper
        uses: gradle/actions/wrapper-validation@v4

      - name: Setup Gradle
        uses: gradle/actions/setup-gradle@v4
        with:
         gradle-version: wrapper

      - name: Download target jar
        run: curl -o targetVersion.jar -L ${{ inputs.targetJarUrl }}

      - name: Build with Gradle
        run: ./gradlew -p ${{ inputs.projectPath }} --info clean build -Prelease_version=${{ steps.ver.outputs.release_version }}

      - name: Get current jar full name
        id: jar_name
        run: |
          if [[ ${{ inputs.libsFolderPath }} != '.' ]]; then
            echo value=$(ls ${{ inputs.libsFolderPath }} | grep "${{ steps.ver.outputs.release_version }}.jar") >> $GITHUB_OUTPUT
          else
            echo value=$(ls ${{ inputs.projectPath }}/build/libs/ | grep "${{ steps.ver.outputs.release_version }}.jar") >> $GITHUB_OUTPUT
          fi

      - name: Run japi-compliance-checker
        continue-on-error: ${{ inputs.continueOnError }}
        run: japi-compliance-checker --lib=${{ steps.jar_name.outputs.value }} -o report.html targetVersion.jar ${{ inputs.projectPath }}/build/libs/${{ steps.jar_name.outputs.value }}

      - name: Upload compatibility report
        if: success() || failure()
        uses: actions/upload-artifact@v4
        with:
          name: japi-compatibility-report
          path: compat_reports