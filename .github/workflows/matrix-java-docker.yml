name: Docker publish for matrix builds


on:
  workflow_call:
    inputs:
      docker-username:
        required: false
        type: string
      build-target:
        required: false
        type: string
        description: 'Use value Docker'
        default: 'Docker'
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      projectName:
        required: true
        type: string
      devRelease:
        required: false
        type: boolean
        default: false
      javaVersion:
        required: false
        type: string
        default: '21'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
      # Trivy block
      scanner-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning are enabled'
      strict-scanner:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning executions are strict'
      trivy-target:
        required: false
        type: string
        default: 'os,library'
        description: 'What Trivy will scan: image, library or both'
      trivy-sensitivity:
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
        description: 'Adjusting the Trivy Scanner Sensitivity'
      gradle-info:
        required: false
        type: boolean
        default: false
    secrets:
      docker-password:
        required: false
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'

jobs:
  prebuild-job:
    name: Prebuild Job
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-workflow.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      devRelease: ${{ inputs.devRelease }}

  # if Docker
  docker-push:
    if: (contains(inputs.build-target, 'Docker') || contains(inputs.build-target, 'docker')) && (inputs.strict-scanner && success() || !inputs.strict-scanner)
    needs: [prebuild-job, owasp-scan, license-check ]
    runs-on: ${{ inputs.runsOn }}
    steps:
      - name: Show custom release version
        run: echo ${{ needs.prebuild-job.outputs.version }}
      - uses: actions/checkout@v5
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.docker-username }}
          password: ${{ secrets.docker-password }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          build-args: |
            project_name=${{ inputs.projectName }}
            release_version=${{ needs.prebuild-job.outputs.version }}
          context: .
          push: true
          tags: ghcr.io/th2-net/th2-${{ inputs.projectName }}:${{ needs.prebuild-job.outputs.version }}
          labels: com.exactpro.th2.th2-${{ inputs.projectName }}=${{ needs.prebuild-job.outputs.version }}
          provenance: false
  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    if: inputs.scanner-enabled
    needs: [ docker-push, prebuild-job ]
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/th2-net/th2-${{ inputs.projectName }}:${{ needs.prebuild-job.outputs.version }}
      target: ${{ inputs.trivy-target }}
      sensitivity: ${{ inputs.trivy-sensitivity }}
  owasp-scan:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/owasp-gradle-scan.yml@main
    with:
      multiproject: true
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
      gradleInfo: ${{ inputs.gradle-info }}
    secrets:
      nvd-api-key: ${{ secrets.nvd-api-key }}

  license-check:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/license_check.yml@main
    needs: [prebuild-job]
    with:
      version: ${{ needs.prebuild-job.outputs.version }}