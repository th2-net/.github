name: Compound Dev Java build and Docker/Sonatype publish

on:
  workflow_call:
    inputs:
      docker-username:
        required: false
        type: string
      build-target:
        required: true
        type: string
        description: 'Use values Docker or Sonatype or both'
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      gradleVersion:
        required: false
        type: string
        default: '7'
      javaVersion:
        required: false
        type: string
        default: '11'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
# Vulnerability scanning
      scanner-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning are enabled'
      strict-scanner:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning executions are strict'
      trivy-target:
        required: false
        type: string
        default: 'os,library'
        description: 'What Trivy will scan: image, library or both'
      trivy-sensitivity:
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
        description: 'Adjusting the Trivy Scanner Sensitivity'
      multiproject:
        required: false
        type: boolean
        default: false
        description: 'false for dependencyCheckAnalyze, true for dependencyCheckAggregate'
      pico-test-enabled:
        required: false
        type: boolean
        default: false
        description: 'Whether run th2-pico-test'

    outputs:
      version:
        description: "Generated version of the image"
        value: ${{ jobs.prebuild-job.outputs.version }}
    secrets:
      docker-password:
        required: false
      sonatypeUsername:
        required: false
      sonatypePassword:
        required: false
      sonatypeSigningKey:
        required: false
      sonatypeSigningPassword:
        required: false
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'

jobs:
  prebuild-job:
    name: Prebuild Job
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-dev-workflow.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}

  # if Docker
  docker-push:
    name: Build Docker image and push to ghcr.io
    if: (contains(inputs.build-target, 'Docker') || contains(inputs.build-target, 'docker')) && (inputs.strict-scanner && success() || !inputs.strict-scanner)
    needs: [prebuild-job, owasp-scan, license-check]
    uses: th2-net/.github/.github/workflows/compaund-java-docker-push.yml@main
    with:
      docker-username: ${{ inputs.docker-username }}
      runsOn: ${{ inputs.runsOn }}
      version: ${{ needs.prebuild-job.outputs.version }}
      versionNumber: ${{ needs.prebuild-job.outputs.versionNumber }}
    secrets:
      docker-password: ${{ secrets.docker-password }}

  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    if: inputs.scanner-enabled
    needs: [docker-push, prebuild-job]
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/${{ github.repository }}:${{ needs.prebuild-job.outputs.version }}
      target: ${{ inputs.trivy-target }}
      sensitivity: ${{ inputs.trivy-sensitivity }}


# if Sonatype
  sonatype-push:
    if: (contains(inputs.build-target, 'Sonatype') || contains(inputs.build-target, 'sonatype')) && (inputs.strict-scanner && success() || !inputs.strict-scanner )
    name: Build and Push Jar to Sonatype
    needs: [ prebuild-job, owasp-scan, license-check ]
    uses: th2-net/.github/.github/workflows/compaund-java-sonatype-push.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      closeAndRelease: false
      version: ${{ needs.prebuild-job.outputs.version }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
    secrets:
      sonatypeUsername: ${{ secrets.sonatypeUsername }}
      sonatypePassword: ${{ secrets.sonatypePassword }}
      sonatypeSigningKey: ${{ secrets.sonatypeSigningKey }}
      sonatypeSigningPassword: ${{ secrets.sonatypeSigningPassword }}

  owasp-scan:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/owasp-gradle-scan.yml@main
    with:
      multiproject: ${{ inputs.multiproject }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
    secrets:
      nvd-api-key: ${{ secrets.nvd-api-key }}

  license-check:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/license_check.yml@main
    needs: [prebuild-job]
    with:
      version: ${{ needs.prebuild-job.outputs.version }}

  pico-test:
    if: inputs.pico-test-enabled
    uses: peter-evans/repository-dispatch@v3
    with:
      token: ${{ secrets.GITHUB_TOKEN }}
      repository: th2-net/th2-pico-test
      event-type: run-pico-test-workflow
      client-payload: '{"component-image": "${{ github.repository }}", "component-image-version": "${{ jobs.prebuild-job.outputs.version }}"}'