name: Compound Dev Java build and Docker/Sonatype publish

on:
  workflow_call:
    inputs:
      docker-username:
        required: false
        type: string
      build-target:
        required: true
        type: string
        description: 'Use values Docker or Sonatype or both'
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      gradleVersion:
        required: false
        type: string
        default: '7'
      javaVersion:
        required: false
        type: string
        default: '21'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
# Vulnerability scanning
      scanner-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning are enabled'
      strict-scanner:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning executions are strict'
      trivy-target:
        required: false
        type: string
        default: 'os,library'
        description: 'What Trivy will scan: image, library or both'
      trivy-sensitivity:
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
        description: 'Adjusting the Trivy Scanner Sensitivity'
      multiproject:
        required: false
        type: boolean
        default: false
        description: |
          false for dependencyCheckAnalyze, true for dependencyCheckAggregate.
          Deprecated: any projects are checked by dependencyCheckAggregate gradle task.
      integration-test-enabled:
        required: false
        type: boolean
        default: false
        description: 'Whether integration test is enabled'
      integration-test-projects:
        required: false
        type: string
        default: "['.']"
        description: 'list of projects for running integration tests'
      integration-test-task:
        required: false
        type: string
        default: 'integrationTest'
        description: "Gradle task name to run integration test"
      gradle-info:
        required: false
        type: boolean
        default: false
    outputs:
      version:
        description: "Generated version of the image"
        value: ${{ jobs.prebuild-job.outputs.version }}
    secrets:
      docker-password:
        required: false
      sonatypeUsername:
        required: false
      sonatypePassword:
        required: false
      sonatypeSigningKey:
        required: false
      sonatypeSigningPassword:
        required: false
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'
      oss-index-user:
        required: true
        description: 'Oss index user name https://ossindex.sonatype.org/doc/auth-required'
      oss-index-token:
        required: true
        description: 'Oss index token https://ossindex.sonatype.org/doc/auth-required'
      cisa-domain:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency domain'
      cisa-user:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency user'
      cisa-password:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency password'

jobs:
  prebuild-job:
    name: Prebuild Job
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-dev-workflow.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}

  java-check:
    name: 'Java check'
    needs: [prebuild-job]
    uses: th2-net/.github/.github/workflows/compound-java-check.yml@main
    with:
      app-version: ${{ needs.prebuild-job.outputs.version }}
      java-version: ${{ inputs.javaVersion }}
      java-vendor: ${{ inputs.javaVendor }}
      scanner-enabled: ${{ inputs.scanner-enabled }}
      strict-scanner: ${{ inputs.strict-scanner }}
      integration-test-enabled: ${{ inputs.integration-test-enabled }}
      integration-test-projects: ${{ inputs.integration-test-projects }}
      integration-test-task: ${{ inputs.integration-test-task }}
      gradle-info: ${{ inputs.gradle-info }}
    secrets:
      nvd-api-key: ${{ secrets.nvd-api-key }}
      oss-index-user: ${{ secrets.oss-index-user }}
      oss-index-token: ${{ secrets.oss-index-oss-index-token }}
      cisa-domain: ${{ secrets.cisa-domain }}
      cisa-user: ${{ secrets.cisa-user }}
      cisa-password: ${{ secrets.cisa-password }}

  # if Docker
  docker-push:
    name: Build Docker image and push to ghcr.io
    if: (contains(inputs.build-target, 'Docker') || contains(inputs.build-target, 'docker')) && !cancelled() && needs.java-check.outputs.aggregated-status == 'true'
    needs: [prebuild-job, java-check]
    uses: th2-net/.github/.github/workflows/compaund-java-docker-push.yml@main
    with:
      docker-username: ${{ inputs.docker-username }}
      runsOn: ${{ inputs.runsOn }}
      version: ${{ needs.prebuild-job.outputs.version }}
      versionNumber: ${{ needs.prebuild-job.outputs.versionNumber }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
    secrets:
      docker-password: ${{ secrets.docker-password }}

  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    if: inputs.scanner-enabled && !cancelled() && needs.docker-push.result == 'success'
    needs: [docker-push, prebuild-job]
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/${{ github.repository }}:${{ needs.prebuild-job.outputs.version }}
      target: ${{ inputs.trivy-target }}
      sensitivity: ${{ inputs.trivy-sensitivity }}


# if Sonatype
  sonatype-push:
    if: (contains(inputs.build-target, 'Sonatype') || contains(inputs.build-target, 'sonatype')) && !cancelled() && needs.java-check.outputs.aggregated-status == 'true'
    name: Build and Push Jar to Sonatype
    needs: [ prebuild-job, java-check ]
    uses: th2-net/.github/.github/workflows/compaund-java-sonatype-push.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      closeAndRelease: false
      version: ${{ needs.prebuild-job.outputs.version }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
      gradleInfo: ${{ inputs.gradle-info }}
    secrets:
      sonatypeUsername: ${{ secrets.sonatypeUsername }}
      sonatypePassword: ${{ secrets.sonatypePassword }}
      sonatypeSigningKey: ${{ secrets.sonatypeSigningKey }}
      sonatypeSigningPassword: ${{ secrets.sonatypeSigningPassword }}
