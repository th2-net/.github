name: Scan licenses and vulnerabilities in java project

on:
  workflow_call:
    inputs:
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      javaVersion:
        required: false
        type: string
        default: '11'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
      # Vulnerability scanning
      scanner-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning are enabled'
      multiproject:
        required: false
        type: boolean
        default: false
        description: |
          false for dependencyCheckAnalyze, true for dependencyCheckAggregate.
          Deprecated: any projects are checked by dependencyCheckAggregate gradle task.
    secrets:
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'
      cisa-domain:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency domain'
      cisa-user:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency user'
      cisa-password:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency password'
        
jobs:
  prebuild-job:
    name: Prebuild Job
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-dev-workflow.yml@main
    with:
        runsOn: ${{ inputs.runsOn }}

  java-check:
    name: 'Java check'
    needs: [prebuild-job]
    uses: th2-net/.github/.github/workflows/compound-java-check.yml@integration-tests # FIXME: switch to main branch
    with:
      runs-on: ${{ inputs.runsOn }}
      app-version: ${{ needs.prebuild-job.outputs.version }}
      java-version: ${{ inputs.javaVersion }}
      java-vendor: ${{ inputs.javaVendor }}
      scanner-enabled: ${{ inputs.scanner-enabled }}
    secrets:
      nvd-api-key: ${{ secrets.nvd-api-key }}
      cisa-domain: ${{ secrets.cisa-domain }}
      cisa-user: ${{ secrets.cisa-user }}
      cisa-password: ${{ secrets.cisa-password }}