name: Dev build and publish Docker distributions to Github Container Registry ghcr.io

on:
  workflow_call:
    inputs:
      docker-username:
        required: true
        type: string
    outputs:
      version:
        description: "Generated version of the image"
        value: ${{ jobs.build.outputs.version }}
    secrets:
      CR_PAT:
        required: true

jobs:
  build:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.release_ver.outputs.value }}
    steps:
      - uses: actions/checkout@v5
      # Prepare custom build version
      - name: Get branch name
        id: branch
        run: echo ::set-output name=branch_name::${GITHUB_REF#refs/*/}
      - name: Get SHA of the commit
        id: sha
        run: echo ::set-output name=sha_short::$(git rev-parse --short HEAD)
      - name: Get release_version
        id: ver
        uses: BrycensRanch/read-properties-action@v1.0.4
        with:
          file: gradle.properties
          property: release_version
      - name: Build custom release version
        id: release_ver
        run: echo ::set-output name=value::"${{ steps.ver.outputs.value }}-${{ steps.branch.outputs.branch_name }}-${{ github.run_id }}-${{ steps.sha.outputs.sha_short }}"
      - name: Show custom release version
        run: echo ${{ steps.release_ver.outputs.value }}
      # Build and publish image
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ inputs.docker-username }}
          password: ${{ secrets.CR_PAT }}
      - run: echo "::set-output name=REPOSITORY_NAME::$(echo '${{ github.repository }}' | awk -F '/' '{print $2}')"
        id: meta
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v6
        with:
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ghcr.io/${{ github.repository }}:${{ steps.release_ver.outputs.value }}
          labels: com.exactpro.th2.${{ steps.meta.outputs.REPOSITORY_NAME }}=${{ steps.ver.outputs.value }}
          provenance: false
          build-args: |
            release_version=${{ steps.release_ver.outputs.value }}
