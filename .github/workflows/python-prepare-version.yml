name: Prepare Python version


on:
  workflow_call:
    inputs:
      release-type:
        required: true
        type: string
        default: snapshot
        description: "one of build modes: snapshot, dev-release, release"
      project-path:
        required: false
        type: string
        default: '.'
        description: 'relative path to the project to extract version'
    outputs:
      original-version:
        description: "Original project version"
        value: ${{ jobs.prepare-python-version.outputs.original-version }}
      version:
        description: "Prepared version"
        value: ${{ jobs.prepare-python-version.outputs.version }}

jobs:
  prepare-python-version:
    name: Prepare python version (${{ inputs.release-type }}) for ${{ inputs.project-path }} project
    runs-on: ubuntu-latest
    outputs:
      original-version: ${{ steps.original-version.outputs.version }}
      version: ${{ steps.prepared-version.outputs.value }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
      - name: Read version
        id: original-version
        uses: th2-net/.github/.github/workflows/python-get-version.yml@main
      - name: Show original version
        run: echo "${{ steps.original-version.outputs.version }}"
      - name: Prepare version
        id: prepared-version
        run: |
          case "${{ inputs.release-type }}"
            'snapshot')
              echo "value=${{ steps.original-version.outputs.version }}.dev${{ github.run_id }}" >> $GITHUB_OUTPUT
            'dev-release')
              echo "value=${{ steps.original-version.outputs.version }}rc${{ github.run_id }}" >> $GITHUB_OUTPUT
            'release')
              echo "value"${{ steps.original-version.outputs.version }}" >> $GITHUB_OUTPUT
            *)
              echo "Unknown release type '${{ inputs.release-type }}'"
          esac
      - name: Show prepared version
        run: echo ${{ steps.prepared-version.outputs.value }}

