name: Compound Java build and Docker/Sonatype publish


on:
  workflow_call:
    inputs:
      docker-username:
        required: false
        type: string
      build-target:
        required: true
        type: string
        description: 'Use values Docker or Sonatype or both'
      runsOn:
        required: false
        type: string
        default: 'ubuntu-latest'
      gradleVersion:
        required: false
        type: string
        default: '7'
      javaVersion:
        required: false
        type: string
        default: '11'
      javaVendor:
        required: false
        type: string
        default: 'zulu'
      devRelease:
        required: false
        type: boolean
        default: false
# Vulnerability scanning
      scanner-enabled:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning are enabled'
      strict-scanner:
        required: false
        type: boolean
        default: true
        description: 'Whether vulnerabilities and license scanning executions are strict'
      trivy-target:
        required: false
        type: string
        default: 'os,library'
        description: 'What Trivy will scan: image, library or both'
      trivy-sensitivity:
        required: false
        type: string
        default: 'CRITICAL,HIGH,MEDIUM'
        description: 'Adjusting the Trivy Scanner Sensitivity'
      multiproject:
        required: false
        type: boolean
        default: false
        description: 'false for dependencyCheckAnalyze, true for dependencyCheckAggregate'
      createTag:
        required: false
        type: boolean
        default: false
        description: 'Whether creating and publishing git tag'

    outputs:
      version:
        description: "Generated version of the image"
        value: ${{ jobs.prebuild-job.outputs.version }}
    secrets:
      docker-password:
        required: false
      sonatypeUsername:
        required: false
      sonatypePassword:
        required: false
      sonatypeSigningKey:
        required: false
      sonatypeSigningPassword:
        required: false
      nvd-api-key:
        required: false
        description: 'API key to access NVD database'
      cisa-domain:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency domain'
      cisa-user:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency user'
      cisa-password:
        required: false
        description: 'Cybersecurity and Infrastructure Security Agency password'

jobs:
  prebuild-job:
    name: Prebuild Job
    uses: th2-net/.github/.github/workflows/compound-prebuild-java-workflow.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      devRelease: ${{ inputs.devRelease }}

# if Docker
  docker-push:
    name: Build Docker image and push to ghcr.io
    if: (contains(inputs.build-target, 'Docker') || contains(inputs.build-target, 'docker')) && (inputs.strict-scanner && success() || !inputs.strict-scanner)
    needs: [prebuild-job, owasp-scan, license-check ]
    uses: th2-net/.github/.github/workflows/compaund-java-docker-push.yml@main
    with:
      docker-username: ${{ inputs.docker-username }}
      runsOn: ${{ inputs.runsOn }}
      version: ${{ needs.prebuild-job.outputs.version }}
      versionNumber: ${{ needs.prebuild-job.outputs.version }}
    secrets:
      docker-password: ${{ secrets.docker-password }}
  trivy-docker-scan:
    name: Scan Docker image for vulnerabilities
    if: inputs.scanner-enabled
    needs: [docker-push, prebuild-job]
    uses: th2-net/.github/.github/workflows/trivy-scan-github.yml@main
    with:
      image-path: ghcr.io/${{ github.repository }}:${{ needs.prebuild-job.outputs.version }}
      target: ${{ inputs.trivy-target }}
      sensitivity: ${{ inputs.trivy-sensitivity }}


# if Sonatype
  sonatype-push:
    if: (contains(inputs.build-target, 'Sonatype') || contains(inputs.build-target, 'sonatype')) && (inputs.strict-scanner && success() || !inputs.strict-scanner)
    name: Build and Push Jar to Sonatype
    needs: [ prebuild-job, owasp-scan, license-check ]
    uses: th2-net/.github/.github/workflows/compaund-java-sonatype-push.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      closeAndRelease: true
      version: ${{ needs.prebuild-job.outputs.version }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
    secrets:
      sonatypeUsername: ${{ secrets.sonatypeUsername }}
      sonatypePassword: ${{ secrets.sonatypePassword }}
      sonatypeSigningKey: ${{ secrets.sonatypeSigningKey }}
      sonatypeSigningPassword: ${{ secrets.sonatypeSigningPassword }}

  owasp-scan:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/owasp-gradle-scan.yml@rm-86764 # FIXME: revert to main 
    with:
      multiproject: ${{ inputs.multiproject }}
      javaVersion: ${{ inputs.javaVersion }}
      javaVendor: ${{ inputs.javaVendor }}
    secrets:
      nvd-api-key: ${{ secrets.nvd-api-key }}
      cisa-domain: ${{ secrets.cisa-domain }}
      cisa-user: ${{ secrets.cisa-user }}
      cisa-password: ${{ secrets.cisa-password }}

  create-tag:
    if: inputs.createTag && !cancelled() && (needs.docker-push.result == 'success' || needs.sonatype-push.result == 'success')
    name: Create and push tag
    needs: [ prebuild-job, sonatype-push, docker-push ]
    uses: th2-net/.github/.github/workflows/compaund-git-tag-push.yml@main
    with:
      runsOn: ${{ inputs.runsOn }}
      tagName: ${{ needs.prebuild-job.outputs.version }}

  license-check:
    if: inputs.scanner-enabled
    uses: th2-net/.github/.github/workflows/license_check.yml@main
    needs: [prebuild-job]
    with:
      version: ${{ needs.prebuild-job.outputs.version }}
